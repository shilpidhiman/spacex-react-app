{"version":3,"sources":["space/SpacexLaunch.js","App.js","reportWebVitals.js","index.js"],"names":["SpacexLaunch","details","flight_number","mission_id","launch_year","launch_success","mission_name","links","rocket","console","log","imgSrc","mission_patch","land_success","first_stage","cores","Card","className","key","src","alt","API","App","props","state","items","isLoaded","api","limit","undefined","querystring","stringify","URL","this","getUpdatedApiUrl","setState","fetch","then","response","json","data","fetchAPI","type","value","LaunchYear","Array","fill","map","item","index","Container","fluid","Row","Col","xs","sm","md","lg","Body","Title","Text","year","Button","variant","toString","onClick","e","updateApiFilters","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","hydrate","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea39c91a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"./SpacexLaunch.css\";\r\n\r\nfunction SpacexLaunch({ details }) {\r\n  const {\r\n    flight_number,\r\n    mission_id,\r\n    launch_year,\r\n    launch_success,\r\n    mission_name,\r\n    links,\r\n    rocket,\r\n  } = details;\r\n  console.log(\"links\",links)\r\n  const imgSrc = links.mission_patch;\r\n  const land_success = rocket.first_stage.cores[0].land_success;\r\n  return (\r\n    <Card className=\"space-card\">\r\n      <div key={flight_number}>\r\n        <div>\r\n          <img\r\n            src={imgSrc}\r\n            alt=\"mission patch img not available on api\"\r\n            className=\"space-image\"\r\n          />\r\n        </div>\r\n        <div className=\"space-mission-flight\">\r\n          {mission_name} #{flight_number}\r\n        </div>\r\n        <div className=\"space-detail\">\r\n          Mission Ids:{\" \"}\r\n          <ul>\r\n            {\" \"}\r\n            <li className=\"spacedetail-value\">{mission_id}</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"space-detail\">\r\n          Launch Year:{\" \"}\r\n          <span className=\"space-detail-value\">{launch_year}</span>\r\n        </div>\r\n        <div className=\"space-detail\">\r\n          Successful Launch:{\" \"}\r\n          <span className=\"space-detail-value\">\r\n            {launch_success ? \"true\" : \"false\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"space-detail\">\r\n          Successful Landing:{\" \"}\r\n          <span className=\"space-detail-value\">\r\n            {land_success ? \"true\" : \"false\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SpacexLaunch;\r\n","import React, { Component } from 'react';\nimport SpacexLaunch from './space/SpacexLaunch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport querystring from 'querystring';\nimport './App.css';\n\nconst API = \"https://api.spacexdata.com/v3/launches?limit=100\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      api: {\n        limit: 100,\n        launch_year: undefined,\n        launch_success: undefined,\n        land_success: undefined,\n      },\n    }\n\n  }\n\n  getUpdatedApiUrl(api = {}) {\n    console.log(\"api\",api)\n    return API + querystring.stringify({ ...api });\n  }\n\n  fetchAPI(api) {\n    const URL = this.getUpdatedApiUrl(api);\n    this.setState({ isLoaded: false, api });\n    fetch(URL)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isLoaded: true,\n          data\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchAPI(this.state.api);\n  }\n\n  updateApiFilters(type, value) {\n    if (this.state.api[type] === value) {\n      value = undefined;\n    }\n\n    const api = {\n      ...this.state.api,\n      [type]: value,\n    };\n\n    this.fetchAPI(api);\n  }\n\n\n  render() {\n\n    const { isLoaded, data } = this.state;\n    const LaunchYear = new Array(16).fill(0).map((item, index) => 2006 + index);\n\n    if (!isLoaded) {\n      return <div className=\"loading\">\n        <span>Loading....</span>\n        </div>\n    }\n\n    else {\n\n      return (\n        <div className=\"App\">\n          <h1 className=\"App-header\">SpaceX Launch Programs</h1>\n          <Container fluid>\n            <Row>\n              <Col xs={12} sm={12} md={6} lg={3}>\n                <Card className=\"App-filter-card\">\n                  <Card.Body>\n                    <Card.Title className=\"App-filter-header\">\n                      Filters\n                    </Card.Title>\n                    <Card.Text className=\"App-filter-heading-launch-year\">\n                      Launch Year\n                      <hr className=\"App-filters-hr\" />\n                    </Card.Text>\n\n                    <Row>\n                      <div className=\"App-filter-button-container\">\n                        {LaunchYear.map((year) => {\n                          return (\n                            <Button\n                              className=\"App-filter-button\"\n                              variant={\n                                this.state.api.launch_year ===\n                                year.toString()\n                                  ? \"success\"\n                                  : \"outline-success\"\n                              }\n                              value={year}\n                              onClick={(e) =>\n                                this.updateApiFilters(\n                                  \"launch_year\",\n                                  e.target.value\n                                )\n                              }\n                            >\n                              {year}\n                            </Button>\n                          );\n                        })}\n                      </div>\n                    </Row>\n\n                    <Card.Text className=\"App-filter-heading\">\n                      Successful Launch\n                      <hr className=\"App-filters-hr\" />\n                    </Card.Text>\n\n                    <div className=\"App-filter-button-container\">\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.api.launch_success === \"true\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\n                            \"launch_success\",\n                            e.target.value\n                          )\n                        }\n                        value=\"true\"\n                      >\n                        True\n                      </Button>\n\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.api.launch_success === \"false\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\n                            \"launch_success\",\n                            e.target.value\n                          )\n                        }\n                        value=\"false\"\n                      >\n                        False\n                      </Button>\n                    </div>\n\n                    <Card.Text className=\"App-filter-heading\">\n                      Successful Landing\n                      <hr className=\"App-filters-hr\" />\n                    </Card.Text>\n                    <div className=\"App-filter-button-container\">\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.api.land_success === \"true\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\"land_success\", e.target.value)\n                        }\n                        value=\"true\"\n                      >\n                        True\n                      </Button>\n\n                      <Button\n                        className=\"App-filter-button\"\n                        variant={\n                          this.state.api.land_success === \"false\"\n                            ? \"success\"\n                            : \"outline-success\"\n                        }\n                        onClick={(e) =>\n                          this.updateApiFilters(\"land_success\", e.target.value)\n                        }\n                        value=\"false\"\n                      >\n                        False\n                      </Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n\n              <Col>\n                <Row>\n                  {data.map((details) => {\n                    return (\n                      <Col md={12} lg={3}>\n                        <SpacexLaunch details={details} />\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Col>\n            </Row>\n            <div>\n              <h5 className=\"DevelopersName\">\n                Developed by : Shilpi Dhiman\n              </h5>\n            </div>\n          </Container>\n          \n\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}